syntax = "proto3";

package attackmate.remote;

import "google/protobuf/struct.proto";
import "common.proto";

// Represents a single AttackMate command for remote execution.
message Command {
  string type = 1; // e.g., "shell", "msf-module"
  string cmd = 2; // The main command string/identifier

  // Flexible parameters mirror Pydantic model fields.
  google.protobuf.Struct parameters = 3;

  // base command fields
  optional string only_if = 10;
  optional string error_if = 11;
  optional string error_if_not = 12;
  optional string loop_if = 13;
  optional string loop_if_not = 14;
  optional string loop_count = 15; // Represented as string for flexibility (like StringNumber)
  optional bool exit_on_error = 16;
  optional string save = 17;
  optional bool background = 18;
  optional bool kill_on_exit = 19;
  map<string, string> metadata = 20;
}

// Request to execute a single command
message ExecuteCommandRequest {
  Command command = 1;
  // Maybe send state here if managed on client side ??
  // VariableStoreState current_state = 2;
}

// Response after executing a single command
message ExecuteCommandResponse {
  CommandResult result = 1;
  VariableStoreState updated_state = 2; // State *after* the command execution
}
